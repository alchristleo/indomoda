<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="detailPOBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>451, 17</value>
  </metadata>
  <metadata name="materialBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 56</value>
  </metadata>
  <metadata name="materialBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 56</value>
  </metadata>
  <metadata name="colorBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>192, 56</value>
  </metadata>
  <metadata name="colorBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>192, 56</value>
  </metadata>
  <metadata name="detailPOBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>451, 17</value>
  </metadata>
  <metadata name="indomodaSupplierBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="bindingSourcePreOrderKain.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>248, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnAddPoKain.TileImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>